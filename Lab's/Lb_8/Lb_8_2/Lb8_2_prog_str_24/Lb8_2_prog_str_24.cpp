#include <iostream> // Подключаем заголовочный файл для работы с вводом-выводом
#include <cstring> // Подключаем заголовочный файл для работы с C-строками
using namespace std; // Используем пространство имен std

// Шаблонная функция, возвращающая больший из двух значений
template <class T>
T getmax(T t1, T t2)
{
    // Если t1 больше t2, возвращаем t1, иначе возвращаем t2
    return t1 > t2 ? t1 : t2;
}

// Специализация функции getmax для строк
const char* getmax(const char* s1, const char* s2)
{
    // Если s1 больше s2 по результатам сравнения strcmp, возвращаем s1, иначе возвращаем s2
    return strcmp(s1, s2) > 0 ? s1 : s2;
}

// Шаблонная функция, возвращающая максимальный элемент в массиве
template <class T>
T getmax(T t[], size_t size)
{
    T retval = t[0]; // Инициализируем retval первым элементом массива
    for (int i = 0; i < size; i++) // Проходим по всем элементам массива
        if (t[i] > retval) retval = t[i]; // Обновляем retval, если текущий элемент больше
    return retval; // Возвращаем максимальный элемент
}

int main()
{
    int i1 = 3, i2 = 5; // Инициализируем две целочисленные переменные
    const char* s1 = "stroka1"; // Инициализируем первую строку
    const char* s2 = "stroka2"; // Инициализируем вторую строку
    
    // Выводим максимальное значение из i1 и i2
    cout << "max int = " << getmax(i1, i2) << endl;
    
    // Выводим максимальную строку из s1 и s2
    cout << "max str = " << getmax(s1, s2) << endl;
    return 0; // Завершаем программу
}